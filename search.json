[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Sergio Pérez Oliveira, Manuel Fernández Sanjurjo, Eduardo Iglesias Gutiérrez Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sergio Pérez Oliveira. Author, maintainer. Manuel Fernández Sanjurjo. Author. Eduardo Iglesias Gutierrez. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pérez Oliveira S, Fernández Sanjurjo M, Iglesias Gutierrez E (2025). miRPM: miRNA RPM Normalization. R package version 0.1.0, https://github.com/sergio30po/miRPM.","code":"@Manual{,   title = {miRPM: miRNA RPM Normalization},   author = {Sergio {Pérez Oliveira} and Manuel {Fernández Sanjurjo} and Eduardo {Iglesias Gutierrez}},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/sergio30po/miRPM}, }"},{"path":[]},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"miRNA RPM Normalization","text":"miRPM lightweight R package normalization analysis microRNA-seq (miRNA-seq) count data using Reads Per Million (RPM). approach provides straightforward biologically interpretable way compare miRNA expression levels across samples different sequencing depths. miRPM designed reproducible analysis small RNA-seq datasets, providing core functionalities RPM normalization, filtering, visualization, basic statistical testing.","code":""},{"path":"/index.html","id":"concept","dir":"","previous_headings":"","what":"Concept","title":"miRNA RPM Normalization","text":"Normalization critical step miRNA-seq analysis correct differences library size sequencing depth samples. advanced methods (e.g., DESeq2, TMM, RUV) handle composition biases, RPM normalization remains essential transparent approach exploratory analyses publication-ready summaries. RPM normalization rescales sample total read count, expressed millions, using: RPMij=countsij∑icountsij×106 RPM_{ij} = \\frac{counts_{ij}}{\\sum_i counts_{ij}} \\times 10^6 countsijcounts_{ij} raw count miRNA sample j.","code":""},{"path":"/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"miRNA RPM Normalization","text":"miRPM provides simple, modular functions different stages normalization exploration workflow:","code":""},{"path":"/index.html","id":"metrics-and-interpretation","dir":"","previous_headings":"","what":"Metrics and Interpretation","title":"miRNA RPM Normalization","text":"RPM normalization statistical model—scaling method. value lies interpretability consistency, especially small medium sample sizes visualization purposes. practice, can evaluate normalization : - Inspecting overall expression distributions normalization. - Assessing whether sample-specific sequencing depth bias removed. - Comparing normalized values across experimental groups.","code":""},{"path":"/index.html","id":"installation-and-usage","dir":"","previous_headings":"","what":"Installation and Usage","title":"miRNA RPM Normalization","text":"can install development version directly GitHub using remotes: Please refer documentation page detailed function references.","code":"# install.packages(\"remotes\") remotes::install_github(\"sergio30po/miRPM\")"},{"path":"/reference/filter_mirnas.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter miRNAs based on expression in a minimum percentage of samples in any group — filter_mirnas","title":"Filter miRNAs based on expression in a minimum percentage of samples in any group — filter_mirnas","text":"function filters miRNAs reads least specified percentage samples group. comparison operator threshold read count can customized (>, >=, <, <=).","code":""},{"path":"/reference/filter_mirnas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter miRNAs based on expression in a minimum percentage of samples in any group — filter_mirnas","text":"","code":"filter_mirnas(   count_matrix,   metadata,   threshold = 0.5,   min_reads = 1000,   threshold_comparison = \">=\",   read_comparison = \">\" )"},{"path":"/reference/filter_mirnas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter miRNAs based on expression in a minimum percentage of samples in any group — filter_mirnas","text":"count_matrix count matrix (miRNAs rows, samples columns). metadata data frame containing sample information, including 'Condition' column group sample. threshold Minimum percentage samples reads (value 0 1, default 0.5). min_reads Minimum number reads consider miRNA expressed sample (default 1000). threshold_comparison Comparison operator threshold. Options \">\", \">=\", \"<\", \"<=\" (default \">=\"). read_comparison Comparison operator read count. Options \">\", \">=\", \"<\", \"<=\" (default \">\").","code":""},{"path":"/reference/filter_mirnas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter miRNAs based on expression in a minimum percentage of samples in any group — filter_mirnas","text":"filtered count matrix containing miRNAs meet criteria least one group.","code":""},{"path":"/reference/filter_mirnas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter miRNAs based on expression in a minimum percentage of samples in any group — filter_mirnas","text":"","code":"# Example usage: # count_matrix <- matrix(c(1000, 0, 2000, 1500, 0, 3000), nrow = 2, dimnames = list(c(\"miRNA1\", \"miRNA2\"), c(\"Sample1\", \"Sample2\", \"Sample3\"))) # metadata <- data.frame(Sample = c(\"Sample1\", \"Sample2\", \"Sample3\"), Condition = c(\"A\", \"A\", \"B\")) # filtered_matrix <- filter_mirnas(count_matrix, metadata, threshold = 0.5, min_reads = 1000, threshold_comparison = \">=\", read_comparison = \">\")"},{"path":"/reference/individual_miRNA_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual miRNA plot for differentially expressed miRNAs — individual_miRNA_plot","title":"Individual miRNA plot for differentially expressed miRNAs — individual_miRNA_plot","text":"function generates dot plots differentially expressed miRNAs specific groups. plots saved PNG files folder named comparison, inside main folder called \"Individual_plots\".","code":""},{"path":"/reference/individual_miRNA_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual miRNA plot for differentially expressed miRNAs — individual_miRNA_plot","text":"","code":"individual_miRNA_plot(   filtered_results,   rpm_matrix,   metadata,   condition_column,   sample_column,   groups_to_include,   condition_colors,   adjusted_pvalue_column,   output_dir = \"Individual_plots\" )"},{"path":"/reference/individual_miRNA_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual miRNA plot for differentially expressed miRNAs — individual_miRNA_plot","text":"filtered_results Data frame filtered results (FDR < 0.05). first column contain miRNA names. rpm_matrix Matrix RPMs (miRNAs rows, samples columns). metadata Data frame sample group information. Must column sample names another groups. condition_column Name column `metadata` contains groups. sample_column Name column `metadata` contains sample names. groups_to_include Vector names groups include comparison. condition_colors Named vector colors condition. names match groups `groups_to_include`. adjusted_pvalue_column Name column `filtered_results` contains adjusted p-value. output_dir Name main folder plots saved (default: \"Individual_plots\").","code":""},{"path":"/reference/individual_miRNA_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Individual miRNA plot for differentially expressed miRNAs — individual_miRNA_plot","text":"return value. plots saved PNG files specified folder structure.","code":""},{"path":"/reference/individual_miRNA_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Individual miRNA plot for differentially expressed miRNAs — individual_miRNA_plot","text":"","code":"if (FALSE) { # \\dontrun{ individual_miRNA_plot(   filtered_results = filtered_results,   rpm_matrix = rpm_matrix,   metadata = metadata,   condition_column = \"Condition\",   sample_column = \"Samples\",   groups_to_include = c(\"Group1\", \"Group2\"),   condition_colors = c(\"Group1\" = \"blue\", \"Group2\" = \"red\"),   adjusted_pvalue_column = \"adj.P.Val\" ) } # }"},{"path":"/reference/miRNA_expression_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate dot plots for differentially expressed miRNAs — miRNA_expression_plot","title":"Generate dot plots for differentially expressed miRNAs — miRNA_expression_plot","text":"function generates dot plots differentially expressed miRNAs specific groups. plots saved interactive HTML files folder called \"Interactive_plots\" specified output name. customizable title can added plot.","code":""},{"path":"/reference/miRNA_expression_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate dot plots for differentially expressed miRNAs — miRNA_expression_plot","text":"","code":"miRNA_expression_plot(   miRNAs_DE,   miRNA_ftd,   metadata,   condition_column,   groups,   colors,   output_name,   plot_title = \"miRNA Expression Plot\" )"},{"path":"/reference/miRNA_expression_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate dot plots for differentially expressed miRNAs — miRNA_expression_plot","text":"miRNAs_DE File containing differentially expressed miRNAs (miRNAs first column). miRNA_ftd Count matrix miRNAs row names samples column names. metadata Data frame containing sample information. Must column sample names condition column. condition_column Name column `metadata` contains group classifications. groups Vector specifying two groups compare within `condition_column`. colors Named vector specifying colors group. output_name Name output HTML file. plot_title Title plot (default: \"miRNA Expression Plot\").","code":""},{"path":"/reference/miRNA_expression_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate dot plots for differentially expressed miRNAs — miRNA_expression_plot","text":"list containing: `ggplot`: ggplot object dot plot. `interactive`: interactive plotly object dot plot. `output_folder`: path \"Interactive_plots\" folder HTML file saved.","code":""},{"path":"/reference/miRNA_expression_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate dot plots for differentially expressed miRNAs — miRNA_expression_plot","text":"","code":"if (FALSE) { # \\dontrun{ output <- miRNA_expression_plot(   miRNAs_DE = \"differential_miRNAs.xlsx\",   miRNA_ftd = miRNA_ftd,   metadata = metadata,   condition_column = \"Condition\",   groups = c(\"Control\", \"Disease\"),   colors = c(\"Control\" = \"blue\", \"Disease\" = \"red\"),   output_name = \"miRNA_expression\",   plot_title = \"Differentially Expressed miRNAs in Control vs Disease\" )  output$ggplot output$interactive output$output_folder } # }"},{"path":"/reference/miRPM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"miRPM: miRNA RPM Normalization — miRPM-package","title":"miRPM: miRNA RPM Normalization — miRPM-package","text":"Functions analysis count matrices RPM normalization miRNA studies.","code":""},{"path":"/reference/miRPM-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"miRPM: miRNA RPM Normalization — miRPM-package","text":"package provides lightweight tools explore, normalize, analyze miRNA-seq count matrices using reads per million (RPM) normalization.","code":""},{"path":[]},{"path":"/reference/miRPM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"miRPM: miRNA RPM Normalization — miRPM-package","text":"Sergio Pérez Oliveira – sergio30po@gmail.com Manuel Fernández Sanjurjo – fernandezsanmanuel@uniovi.es Eduardo Iglesias Gutierrez – iglesiaseduardo@uniovi.es","code":""},{"path":"/reference/normalize_rpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a count matrix to RPM without scientific notation — normalize_rpm","title":"Normalize a count matrix to RPM without scientific notation — normalize_rpm","text":"function normalizes count matrix Reads Per Million (RPM) using total reads per sample. resulting matrix rounded 2 decimal places avoids scientific notation.","code":""},{"path":"/reference/normalize_rpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a count matrix to RPM without scientific notation — normalize_rpm","text":"","code":"normalize_rpm(count_matrix, metrics, reads_column)"},{"path":"/reference/normalize_rpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a count matrix to RPM without scientific notation — normalize_rpm","text":"count_matrix count matrix (genes rows, samples columns). metrics dataframe containing sample information, including total reads. reads_column name column metrics contains total reads.","code":""},{"path":"/reference/normalize_rpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a count matrix to RPM without scientific notation — normalize_rpm","text":"normalized matrix RPM without scientific notation.","code":""},{"path":"/reference/normalize_rpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize a count matrix to RPM without scientific notation — normalize_rpm","text":"","code":"# Example usage: # count_matrix <- matrix(c(100, 200, 300, 400), nrow = 2, dimnames = list(c(\"Gene1\", \"Gene2\"), c(\"Sample1\", \"Sample2\"))) # metrics <- data.frame(Sample = c(\"Sample1\", \"Sample2\"), TotalReads = c(1000, 2000)) # rpm_matrix <- normalize_rpm(count_matrix, metrics, \"TotalReads\")"},{"path":"/reference/perform_statistical_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Statistical Tests on miRNA Expression Data — perform_statistical_tests","title":"Perform Statistical Tests on miRNA Expression Data — perform_statistical_tests","text":"function performs statistical tests miRNA expression data based number groups specified condition. two groups, performs Mann-Whitney U test. three groups, performs Kruskal-Wallis test followed Dunn's post hoc test. Results saved Excel file inside \"Tests_results\" folder separate sheets comparison. sheet also include column indicating significance results using symbols: `*` p-value < 0.05, `**` p-value < 0.01, `***` p-value < 0.005.","code":""},{"path":"/reference/perform_statistical_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Statistical Tests on miRNA Expression Data — perform_statistical_tests","text":"","code":"perform_statistical_tests(miRNA_ftd, metadata, condition, output_file)"},{"path":"/reference/perform_statistical_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Statistical Tests on miRNA Expression Data — perform_statistical_tests","text":"miRNA_ftd count matrix miRNA expression data (miRNAs rows, samples columns). metadata dataframe containing sample information, including condition test. condition name column `metadata` defines groups compare. output_file name output Excel file (e.g., \"Results.xlsx\").","code":""},{"path":"/reference/perform_statistical_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Statistical Tests on miRNA Expression Data — perform_statistical_tests","text":"Excel file statistical results. Kruskal-Wallis, includes sheet global test sheets Dunn's post hoc comparisons. Mann-Whitney, includes single sheet test results. sheet column titled \"Significance\" showing corresponding symbol (`*`, `**`, `***`). dataframe comparison. path output folder (\"Tests_results\").","code":""},{"path":"/reference/perform_statistical_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Statistical Tests on miRNA Expression Data — perform_statistical_tests","text":"","code":"# Example usage: # miRNA_ftd <- matrix(c(10, 20, 30, 40, 50, 60), nrow = 2, dimnames = list(c(\"miRNA1\", \"miRNA2\"), c(\"Sample1\", \"Sample2\", \"Sample3\"))) # metadata <- data.frame(Sample = c(\"Sample1\", \"Sample2\", \"Sample3\"), Condition = c(\"A\", \"A\", \"B\")) # perform_statistical_tests(miRNA_ftd, metadata, \"Condition\", \"Test_Results.xlsx\")"}]
